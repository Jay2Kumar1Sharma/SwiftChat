{
  "name": "distributed-chat-app",
  "version": "1.0.0",
  "description": "Distributed real-time chat application with microservices architecture",
  "main": "index.js",
  "scripts": {
    "setup": "node scripts/setup.js",
    "install:all": "npm run install:frontend && npm run install:gateway && npm run install:websocket && npm run install:auth && npm run install:chat && npm run install:notification",
    "install:frontend": "cd frontend && npm install",
    "install:gateway": "cd api-gateway && npm install", 
    "install:websocket": "cd websocket-gateway && npm install",
    "install:auth": "cd auth-service && npm install",
    "install:chat": "cd chat-service && npm install",
    "install:notification": "cd notification-service && npm install",
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:gateway\" \"npm run dev:websocket\" \"npm run dev:auth\" \"npm run dev:chat\" \"npm run dev:notification\"",
    "dev:infra": "docker-compose -f docker-compose.dev.yml up -d",
    "dev:frontend": "cd frontend && npm start",
    "dev:gateway": "cd api-gateway && npm run dev",
    "dev:websocket": "cd websocket-gateway && npm run dev", 
    "dev:auth": "cd auth-service && npm run dev",
    "dev:chat": "cd chat-service && npm run dev",
    "dev:notification": "cd notification-service && npm run dev",
    "build": "npm run build:frontend && npm run build:gateway && npm run build:websocket && npm run build:auth && npm run build:chat && npm run build:notification",
    "build:frontend": "cd frontend && npm run build",
    "build:gateway": "cd api-gateway && npm run build",
    "build:websocket": "cd websocket-gateway && npm run build",
    "build:auth": "cd auth-service && npm run build", 
    "build:chat": "cd chat-service && npm run build",
    "build:notification": "cd notification-service && npm run build",
    "start": "docker-compose up -d",
    "stop": "docker-compose down",
    "restart": "npm run stop && npm run start",
    "status": "docker-compose ps",
    "logs": "docker-compose logs -f",
    "logs:gateway": "docker-compose logs -f api-gateway",
    "logs:websocket": "docker-compose logs -f websocket-gateway",
    "logs:auth": "docker-compose logs -f auth-service",
    "logs:chat": "docker-compose logs -f chat-service",
    "logs:notification": "docker-compose logs -f notification-service",
    "stop:infra": "docker-compose -f docker-compose.dev.yml down",
    "clean": "npm run stop && docker system prune -f && docker volume prune -f",
    "test": "npm run test:gateway && npm run test:websocket && npm run test:auth && npm run test:chat && npm run test:notification",
    "test:gateway": "cd api-gateway && npm test",
    "test:websocket": "cd websocket-gateway && npm test",
    "test:auth": "cd auth-service && npm test",
    "test:chat": "cd chat-service && npm test", 
    "test:notification": "cd notification-service && npm test"
  },
  "keywords": [
    "chat",
    "real-time", 
    "microservices",
    "websocket",
    "react",
    "nodejs",
    "postgresql",
    "redis",
    "docker"
  ],
  "author": "Microsoft Software Engineering Intern",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.2",
    "wait-on": "^7.2.0"
  },
  "workspaces": [
    "frontend",
    "api-gateway", 
    "websocket-gateway",
    "auth-service",
    "chat-service",
    "notification-service"
  ]
}
